import{_ as k}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as r,c as d,b as n,d as s,e as a,w as t,a as u}from"./app-5LVKShiE.js";const v={},m={class:"hint-container warning"},b=n("p",{class:"hint-container-title"},"请先读我",-1),g=n("h1",{id:"快速开始",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#快速开始"},[n("span",null,"快速开始")])],-1),h=n("p",null,[s("此处将展示一个 最少配置 的 "),n("code",null,"1078协议"),s(" 消息处理服务的搭建。")],-1),y={class:"hint-container tip"},f=n("p",{class:"hint-container-title"},"传送门",-1),w={href:"https://github.com/hylexus/jt-framework-samples-maven/tree/master/jt-1078-server-sample-webflux-boot3",title:"jt-1078-server-sample-webflux-boot3",target:"_blank",rel:"noopener noreferrer"},_=n("br",null,null,-1),S={href:"https://github.com/hylexus/jt-framework-samples-maven/tree/master/jt-1078-server-sample-webmvc-boot3",title:"jt-1078-server-sample-webmvc-boot3",target:"_blank",rel:"noopener noreferrer"},x=n("h2",{id:"创建工程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#创建工程"},[n("span",null,"创建工程")])],-1),E=n("p",null,[s("创建一个空的 "),n("code",null,"spring-boot"),s(" 工程。")],-1),T={class:"hint-container tip"},C=n("p",{class:"hint-container-title"},"传送门",-1),j={href:"https://start.spring.io",target:"_blank",rel:"noopener noreferrer"},q=n("h2",{id:"添加依赖",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#添加依赖"},[n("span",null,"添加依赖")])],-1),O=n("h3",{id:"spring-boot-2-x",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spring-boot-2-x"},[n("span",null,"spring-boot-2.x")])],-1),M=n("p",null,[s("使用 "),n("code",null,"spring-boot-2.x"),s(" 的项目引入为 "),n("code",null,"1078协议"),s(" 提供的 "),n("code",null,"jt-1078-server-spring-boot-starter-boot2")],-1),H=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml","data-title":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("io.github.hylexus.jt"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("jt-1078-server-spring-boot-starter-boot2"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("version")]),n("span",{class:"token punctuation"},">")]),s("2.2.0-beta3"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("version")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),L=n("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy","data-title":"groovy"},[n("pre",{class:"language-groovy"},[n("code",null,[s("implementation "),n("span",{class:"token string"},"'io.github.hylexus.jt:jt-1078-server-spring-boot-starter-boot2:2.2.0-beta3'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),W=n("h3",{id:"spring-boot-3-x",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spring-boot-3-x"},[n("span",null,"spring-boot-3.x")])],-1),D=n("p",null,[s("使用 "),n("code",null,"spring-boot-3.x"),s(" 的项目引入为 "),n("code",null,"1078协议"),s(" 提供的 "),n("code",null,"jt-1078-server-spring-boot-starter")],-1),A=n("div",{class:"language-xml line-numbers-mode","data-ext":"xml","data-title":"xml"},[n("pre",{class:"language-xml"},[n("code",null,[s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s("io.github.hylexus.jt"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("groupId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s("jt-1078-server-spring-boot-starter"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("artifactId")]),n("span",{class:"token punctuation"},">")]),s(`
    `),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"<"),s("version")]),n("span",{class:"token punctuation"},">")]),s("2.2.0-beta3"),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("version")]),n("span",{class:"token punctuation"},">")]),s(`
`),n("span",{class:"token tag"},[n("span",{class:"token tag"},[n("span",{class:"token punctuation"},"</"),s("dependency")]),n("span",{class:"token punctuation"},">")]),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"}),n("div",{class:"line-number"})])],-1),P=n("div",{class:"language-groovy line-numbers-mode","data-ext":"groovy","data-title":"groovy"},[n("pre",{class:"language-groovy"},[n("code",null,[s("implementation "),n("span",{class:"token string"},"'io.github.hylexus.jt:jt-1078-server-spring-boot-starter:2.2.0-beta3'"),s(`
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),F=u(`<h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置"><span>配置</span></a></h2><ul><li>application.yml</li></ul><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt1078</span><span class="token punctuation">:</span>
  <span class="token key atrule">server</span><span class="token punctuation">:</span>
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">61078</span>
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">root</span><span class="token punctuation">:</span> info
    <span class="token key atrule">io.github.hylexus.jt.jt1078.support.dispatcher.Jt1078RequestHandler</span><span class="token punctuation">:</span> debug
    <span class="token key atrule">io.github.hylexus.jt.jt1078.support.netty.Jt1078DispatcherChannelHandler</span><span class="token punctuation">:</span> debug

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="注册你自己的订阅者" tabindex="-1"><a class="header-anchor" href="#注册你自己的订阅者"><span>注册你自己的订阅者</span></a></h2><p>通过 <code>Jt1078Publisher</code> 实例来注册你自己的码流订阅者。</p><h3 id="伪代码" tabindex="-1"><a class="header-anchor" href="#伪代码"><span>伪代码</span></a></h3><p>一般流程大致像下面伪代码所示：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">;</span>

    <span class="token comment">// 自动注入 Jt1078Publisher 实例</span>
    <span class="token keyword">public</span> <span class="token class-name">SomeClass</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> publisher<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 订阅 SIM 号为 &quot;139xxxxxx&quot; 的终端的 &quot;3&quot; 号逻辑通道</span>
    <span class="token comment">// 并将码流中的 H.264 转为 FLV</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">subscribeFlvStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> timeout <span class="token operator">=</span> <span class="token number">30</span><span class="token punctuation">;</span> <span class="token comment">// 30s 内没有任何数据，订阅自动关闭</span>
        <span class="token keyword">final</span> <span class="token class-name">String</span> sim <span class="token operator">=</span> <span class="token string">&quot;139xxxxxx&quot;</span><span class="token punctuation">;</span> <span class="token comment">// SIM 号</span>
        <span class="token keyword">final</span> <span class="token keyword">short</span> channel <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 逻辑通道号</span>
        <span class="token comment">// Jt1078ChannelCollector.H264_TO_FLV_COLLECTOR: 当前订阅使用H264_TO_FLV_COLLECTOR将码流数据中的H.264转换为FLV</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">.</span><span class="token constant">H264_TO_FLV_COLLECTOR</span><span class="token punctuation">,</span> sim<span class="token punctuation">,</span> channel<span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token comment">// [可选]</span>
                <span class="token punctuation">.</span><span class="token function">publishOn</span><span class="token punctuation">(</span><span class="token class-name">WebSocketConfig</span><span class="token punctuation">.</span><span class="token constant">SCHEDULER</span><span class="token punctuation">)</span>
                <span class="token comment">// 发生 Jt1078SessionDestroyException 和 TimeoutException 异常时结束当前订阅</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token comment">// [可选] 当前 session 销毁时回调</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(Session销毁)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// [可选] 超时时回调</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(超时, {} 秒)&quot;</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// [可选] 发生其他异常时回调</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 异常结束</span>
                    <span class="token comment">// sseEmitter.completeWithError(e);</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// [可选] 当有数据到来时打印日志 [仅仅用于 debug]</span>
                <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>subscription <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> payload <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Http outbound {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FormatUtils</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">// 当前留结束时(异常/正常)</span>
                <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>signalType <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Http outbound complete with signal: {}&quot;</span><span class="token punctuation">,</span> signalType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 自动关闭当前 session</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">isAutoCloseJt1078SessionOnClientClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>sessionManager<span class="token punctuation">.</span><span class="token function">removeBySimAndChannelAndThenClose</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">getSim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MyJt1078SessionCloseReason</span><span class="token punctuation">.</span><span class="token constant">CLOSED_BY_WEB_SOCKET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Jt1078SessionClosed By HttpStream: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// 正常结束</span>
                    <span class="token comment">// sseEmitter.complete();</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscription <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token comment">// payload就是转换之后的码流数据，你可以将其发送到任何你想发送的地方(WebSocket、HTTP、文件、支持 rtmp 的其他推流服务、………………)</span>
                    <span class="token comment">// payload就是转换之后的码流数据，你可以将其发送到任何你想发送的地方(WebSocket、HTTP、文件、支持 rtmp 的其他推流服务、………………)</span>
                    <span class="token comment">// payload就是转换之后的码流数据，你可以将其发送到任何你想发送的地方(WebSocket、HTTP、文件、支持 rtmp 的其他推流服务、………………)</span>
                    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> payload <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;send: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FormatUtils</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token comment">// sseEmitter.send(payload, MediaType.APPLICATION_OCTET_STREAM);</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token comment">// sseEmitter.completeWithError(e);</span>
                        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="http订阅示例" tabindex="-1"><a class="header-anchor" href="#http订阅示例"><span>HTTP订阅示例</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li><strong>HTTP</strong> 播放码流的话，卡顿严重不太推荐，推荐使用 <strong>WebSocket</strong></li><li>另外，也不太推荐 <strong>SpringMVC</strong>，更推荐 <strong>SpringWebFlux</strong></li><li>但是此处还是以 <strong>SpringMVC</strong> 为例，因为大多数用户对 <strong>MVC</strong> 比较熟悉一点</li></ul></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token annotation punctuation">@Controller</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/jt1078/subscription/http/flv&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlvStreamSubscriberDemoHttp</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Scheduler</span> <span class="token constant">BOUNDED_ELASTIC</span> <span class="token operator">=</span> <span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">newBoundedElastic</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">&quot;HttpDemo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt1078SessionManager</span> sessionManager<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">FlvStreamSubscriberDemoHttp</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionManager</span> sessionManager<span class="token punctuation">,</span> <span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>sessionManager <span class="token operator">=</span> sessionManager<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> publisher<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;/{sim}/{channel}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseBodyEmitter</span> <span class="token function">handle</span><span class="token punctuation">(</span>
            <span class="token comment">// HttpServletResponse response,</span>
            <span class="token class-name">DemoVideoStreamSubscriberDto</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token comment">// response.setContentType(MediaType.APPLICATION_OCTET_STREAM_VALUE);</span>

        <span class="token keyword">final</span> <span class="token class-name">ResponseBodyEmitter</span> sseEmitter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseBodyEmitter</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">subscribeFlvStream</span><span class="token punctuation">(</span>params<span class="token punctuation">,</span> sseEmitter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> sseEmitter<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">subscribeFlvStream</span><span class="token punctuation">(</span><span class="token class-name">DemoVideoStreamSubscriberDto</span> params<span class="token punctuation">,</span> <span class="token class-name">ResponseBodyEmitter</span> sseEmitter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token keyword">int</span> timeout <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">.</span><span class="token constant">H264_TO_FLV_COLLECTOR</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getSim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">publishOn</span><span class="token punctuation">(</span><span class="token constant">BOUNDED_ELASTIC</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(Session销毁)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(超时, {} 秒)&quot;</span><span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// 异常结束</span>
                    sseEmitter<span class="token punctuation">.</span><span class="token function">completeWithError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>subscription <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> payload <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Http outbound {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FormatUtils</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>signalType <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Http outbound complete with signal: {}&quot;</span><span class="token punctuation">,</span> signalType<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">if</span> <span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">isAutoCloseJt1078SessionOnClientClosed</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">this</span><span class="token punctuation">.</span>sessionManager<span class="token punctuation">.</span><span class="token function">removeBySimAndChannelAndThenClose</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">getSim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">MyJt1078SessionCloseReason</span><span class="token punctuation">.</span><span class="token constant">CLOSED_BY_WEB_SOCKET</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Jt1078SessionClosed By HttpStream: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                    <span class="token comment">// 正常结束</span>
                    sseEmitter<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span>subscription <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> payload <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        <span class="token comment">// 异常结束</span>
                        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;send: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">FormatUtils</span><span class="token punctuation">.</span><span class="token function">toHexString</span><span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        sseEmitter<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>payload<span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_OCTET_STREAM</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        sseEmitter<span class="token punctuation">.</span><span class="token function">completeWithError</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="websocket订阅示例" tabindex="-1"><a class="header-anchor" href="#websocket订阅示例"><span>WebSocket订阅示例</span></a></h3><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>推荐使用 <strong>WebSocket</strong></li><li>另外，也不太推荐 <strong>SpringMVC</strong>，更推荐 <strong>SpringWebFlux</strong></li><li>但是此处还是以 <strong>SpringMVC</strong> 为例，因为大多数用户对 <strong>MVC</strong> 比较熟悉一点</li></ul></div><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Slf4j</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FlvStreamSubscriberDemoWebSocket</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractWebSocketHandler</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Scheduler</span> <span class="token constant">BOUNDED_ELASTIC</span> <span class="token operator">=</span> <span class="token class-name">Schedulers</span><span class="token punctuation">.</span><span class="token function">newBoundedElastic</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">,</span> <span class="token string">&quot;HttpDemo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">PATH_PATTERN</span> <span class="token operator">=</span> <span class="token string">&quot;/jt1078/subscription/websocket/flv/{sim}/{channel}&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">WebSocketSession</span><span class="token punctuation">&gt;</span></span> sessionMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ConcurrentHashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">UriTemplate</span> uriTemplate<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">FlvStreamSubscriberDemoWebSocket</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Publisher</span> publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher <span class="token operator">=</span> publisher<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>uriTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UriTemplate</span><span class="token punctuation">(</span><span class="token constant">PATH_PATTERN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterConnectionEstablished</span><span class="token punctuation">(</span><span class="token annotation punctuation">@NonNull</span> <span class="token class-name">WebSocketSession</span> session<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">DemoVideoStreamSubscriberDto</span> params <span class="token operator">=</span> <span class="token class-name">WebSocketUtils</span><span class="token punctuation">.</span><span class="token function">createForBlockingSession</span><span class="token punctuation">(</span>session<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>uriTemplate<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;New FLV publisher created via WebSocket: {}&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sessionMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">this</span><span class="token punctuation">.</span>publisher<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">.</span><span class="token constant">H264_TO_FLV_COLLECTOR</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getSim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getChannel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">.</span><span class="token function">ofSeconds</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">publishOn</span><span class="token punctuation">(</span><span class="token constant">BOUNDED_ELASTIC</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">onErrorComplete</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Jt1078SessionDestroyException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(Session销毁)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">TimeoutException</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;取消订阅(超时, {} 秒)&quot;</span><span class="token punctuation">,</span> params<span class="token punctuation">.</span><span class="token function">getTimeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnError</span><span class="token punctuation">(</span><span class="token class-name">Throwable</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> e <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doOnNext</span><span class="token punctuation">(</span>subscription <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">final</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> subscription<span class="token punctuation">.</span><span class="token function">payload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;WebSocket outbound: {}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HexStringUtils</span><span class="token punctuation">.</span><span class="token function">bytes2HexString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">try</span> <span class="token punctuation">{</span>
                        session<span class="token punctuation">.</span><span class="token function">sendMessage</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">BinaryMessage</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">doFinally</span><span class="token punctuation">(</span>signalType <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">final</span> <span class="token class-name">WebSocketSession</span> remove <span class="token operator">=</span> sessionMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>remove <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                                remove<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                            <span class="token punctuation">}</span>
                        <span class="token punctuation">}</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;session add : {}&quot;</span><span class="token punctuation">,</span> session<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterConnectionClosed</span><span class="token punctuation">(</span><span class="token class-name">WebSocketSession</span> session<span class="token punctuation">,</span> <span class="token annotation punctuation">@NonNull</span> <span class="token class-name">CloseStatus</span> closeStatus<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">synchronized</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">final</span> <span class="token class-name">WebSocketSession</span> removed <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>sessionMap<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>session<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>removed <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                removed<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;session {} closed with status  {}&quot;</span><span class="token punctuation">,</span> session<span class="token punctuation">,</span> closeStatus<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将上面的 <code>WebSocket</code> 处理器注册到 <code>SpringMVC</code> 的消息处理流程中。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Configuration</span>
<span class="token annotation punctuation">@EnableWebSocket</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WebSocketConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebSocketConfigurer</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">Jt1078Publisher</span> jt1078Publisher<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">WebSocketConfig</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Publisher</span> jt1078Publisher<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>jt1078Publisher <span class="token operator">=</span> jt1078Publisher<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">registerWebSocketHandlers</span><span class="token punctuation">(</span><span class="token class-name">WebSocketHandlerRegistry</span> registry<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        registry<span class="token punctuation">.</span><span class="token function">addHandler</span><span class="token punctuation">(</span><span class="token function">webSocketSubscriberDemoFlv</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">FlvStreamSubscriberDemoWebSocket</span><span class="token punctuation">.</span><span class="token constant">PATH_PATTERN</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setAllowedOrigins</span><span class="token punctuation">(</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">WebSocketHandler</span> <span class="token function">webSocketSubscriberDemoFlv</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">FlvStreamSubscriberDemoWebSocket</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>jt1078Publisher<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h2><h3 id="启动项目" tabindex="-1"><a class="header-anchor" href="#启动项目"><span>启动项目</span></a></h3><p>至此，对 <strong>1078消息</strong> 的处理服务已经搭建完毕。启动 <code>spring-boot</code> 项目开始测试。</p><div class="hint-container caution"><p class="hint-container-title">提示</p><p>在你订阅某个终端的某个通道之后，记得给设备发送一个 <code>0x9101</code> 消息，让设备上传数据到你的 <strong>1078</strong> 服务端。</p></div><h3 id="http客户端订阅" tabindex="-1"><a class="header-anchor" href="#http客户端订阅"><span>HTTP客户端订阅</span></a></h3><p>如果你要用 HTTP 协议来播放 <code>FLV</code> 视频流，现在就可以访问了。使用任意一款支持 FLV 协议的视频播放播放视频即可。</p>`,22),I={class:"hint-container tip"},J=n("p",{class:"hint-container-title"},"提示",-1),V=n("li",null,[s("播放地址："),n("code",null,"http://127.0.0.1:1078/jt1078/subscription/http/flv/{SIM}/{channelNumber}?timeout=10000")],-1),B=n("li",null,[s("将其中的 "),n("code",null,"SIM"),s(" 换成你自己的终端手机号，"),n("code",null,"channelNumber"),s(" 换成你要订阅的逻辑通道号")],-1),R=n("strong",null,"VLC media player",-1),N={href:"https://github.com/Bilibili/flv.js",target:"_blank",rel:"noopener noreferrer"},U={href:"https://github.com/xqq/mpegts.js",target:"_blank",rel:"noopener noreferrer"},z=n("h3",{id:"websocket客户端订阅",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#websocket客户端订阅"},[n("span",null,"WebSocket客户端订阅")])],-1),K=n("p",null,[s("如果你要用 "),n("code",null,"WebSocket"),s(" 协议来播放 "),n("code",null,"FLV"),s(" 视频流，你需要找一款支持 WebSocket 协议的 FLV 播放器。")],-1),Y={class:"hint-container tip"},G=n("p",{class:"hint-container-title"},"提示",-1),Q=n("li",null,[s("播放地址: "),n("code",null,"ws://127.0.0.1:1078/jt1078/subscription/websocket/flv/{SIM}/{channelNumber}?timeout=10000")],-1),X=n("li",null,[s("将其中的 "),n("code",null,"SIM"),s(" 换成你自己的终端手机号，"),n("code",null,"channelNumber"),s(" 换成你要订阅的逻辑通道号")],-1),Z={href:"https://github.com/Bilibili/flv.js",target:"_blank",rel:"noopener noreferrer"},$={href:"https://github.com/xqq/mpegts.js",target:"_blank",rel:"noopener noreferrer"},nn=u('<h3 id="发报文" tabindex="-1"><a class="header-anchor" href="#发报文"><span>发报文</span></a></h3><div class="hint-container caution"><p class="hint-container-title">提示</p><ul><li>正常情况应该是给设备下发一个 <code>0x9101</code> 消息，然后设备会上传码流数据到 <code>0x9101</code> 消息中指定的服务器。</li><li>在这个 <strong>quickstart</strong> 的场景下，你自己随便找个报文，然后上传到 <code>127.0.0.1</code> 的 <code>61078</code> 端口就可以了。</li></ul></div>',2),sn={class:"hint-container tip"},an=n("p",{class:"hint-container-title"},"传送门",-1),tn={href:"https://github.com/hylexus/jt-framework-samples-maven/tree/master/jt-1078-server-sample-webflux-boot3",title:"jt-1078-server-sample-webflux-boot3",target:"_blank",rel:"noopener noreferrer"},pn=n("br",null,null,-1),en={href:"https://github.com/hylexus/jt-framework-samples-maven/tree/master/jt-1078-server-sample-webmvc-boot3",title:"jt-1078-server-sample-webmvc-boot3",target:"_blank",rel:"noopener noreferrer"};function on(cn,ln){const c=l("RouterLink"),p=l("ExternalLinkIcon"),i=l("CodeTabs");return r(),d("div",null,[n("div",m,[b,n("p",null,[s("如果你还不熟悉整个通信流程，建议先阅读 "),a(c,{to:"/protocol-introduction/communication-flow.html"},{default:t(()=>[s("协议扫盲--通信流程")]),_:1})])]),g,h,n("div",y,[f,n("p",null,[s("本小节的示例可以在 "),n("a",w,[s("samples/jt-1078-server-sample-webflux-boot3"),a(p)]),_,s(" 和 "),n("a",S,[s("samples/jt-1078-server-sample-webmvc-boot3"),a(p)]),s(" 下找到对应代码。")])]),x,E,n("div",T,[C,n("p",null,[s("可以使用 "),n("a",j,[s("Spring Initializer"),a(p)]),s(" 快速初始化一个 Spring Boot 工程。")])]),q,O,M,a(i,{id:"36",data:[{id:"maven"},{id:"gradle"}],active:1,"tab-id":"gradle"},{title0:t(({value:e,isActive:o})=>[s("maven")]),title1:t(({value:e,isActive:o})=>[s("gradle")]),tab0:t(({value:e,isActive:o})=>[H]),tab1:t(({value:e,isActive:o})=>[L]),_:1}),W,D,a(i,{id:"50",data:[{id:"maven"},{id:"gradle"}],active:1,"tab-id":"gradle"},{title0:t(({value:e,isActive:o})=>[s("maven")]),title1:t(({value:e,isActive:o})=>[s("gradle")]),tab0:t(({value:e,isActive:o})=>[A]),tab1:t(({value:e,isActive:o})=>[P]),_:1}),F,n("div",I,[J,n("ul",null,[V,B,n("li",null,[s("推荐视频播放器: "),R,s("、"),n("a",N,[s("flv.js"),a(p)]),s(" 或 "),n("a",U,[s("mpegts.js"),a(p)])]),n("li",null,[s("HTML示例参见 "),a(c,{to:"/guide/appendix/flv-web-player/mpegts-sample.html"},{default:t(()=>[s("附录--mpegts.js")]),_:1})])])]),z,K,n("div",Y,[G,n("ul",null,[Q,X,n("li",null,[s("推荐播放器: "),n("a",Z,[s("flv.js"),a(p)]),s(" 或 "),n("a",$,[s("mpegts.js"),a(p)])]),n("li",null,[s("HTML示例参见 "),a(c,{to:"/guide/appendix/flv-web-player/mpegts-sample.html"},{default:t(()=>[s("附录--mpegts.js")]),_:1})])])]),nn,n("div",sn,[an,n("p",null,[s("本小节的示例可以在 "),n("a",tn,[s("samples/jt-1078-server-sample-webflux-boot3"),a(p)]),pn,s(" 和 "),n("a",en,[s("samples/jt-1078-server-sample-webmvc-boot3"),a(p)]),s(" 下找到对应代码。")])])])}const rn=k(v,[["render",on],["__file","quick-start.html.vue"]]);export{rn as default};
