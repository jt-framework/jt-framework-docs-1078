import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as e}from"./app-5LVKShiE.js";const t={},p=e(`<h1 id="请求生命周期监听器" tabindex="-1"><a class="header-anchor" href="#请求生命周期监听器"><span>请求生命周期监听器</span></a></h1><h2 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h2><p>一个终端请求的处理，包含下面几个比较关键的步骤：</p><ul><li><code>decode</code>: 将 <code>ByteBuf</code> 初步解码为 <code>Jt1078Request</code><ul><li>此时消息整体结构已经解码完成</li></ul></li><li><code>dispatch</code>: 将上一步初步解码的 <code>Jt1078Request</code> 对象 <strong>分发</strong> 出去 <ul><li>如果是分包请求, 会在 <code>Jt1078RequestSubPackageCombiner</code> 里暂存分包</li><li>否则，进行下一步</li></ul></li><li><code>handle</code>: 将请求(包括合并后的分包请求)转发给 <code>Jt1078RequestHandler</code> 处理</li></ul><p>对应上面描述的处理流程，提供了 <code>Jt1078RequestLifecycleListener</code> 以便在消息处理流程的关键步骤:</p><ul><li>加入自己的逻辑</li><li>拦截请求的处理流程</li></ul><details class="hint-container details"><summary>点击展开 Jt1078RequestLifecycleListener 接口声明</summary><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt1078RequestLifecycleListener</span> <span class="token keyword">extends</span> <span class="token class-name">OrderedComponent</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">request</span> 尚未解码的原始报文
     * <span class="token keyword">@param</span> <span class="token parameter">channel</span> 当前终端对应的 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Channel</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span><span class="token class-name">Jt1078DispatcherChannelHandler</span><span class="token punctuation">#</span><span class="token function">channelRead</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">beforeDecode</span><span class="token punctuation">(</span><span class="token class-name">ByteBuf</span> request<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">request</span> 初步解码后的请求(分包合并之前)
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>netty<span class="token punctuation">.</span></span><span class="token class-name">Jt1078DispatcherChannelHandler</span><span class="token punctuation">#</span><span class="token function">channelRead</span><span class="token punctuation">(</span><span class="token class-name">ChannelHandlerContext</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">beforeDispatch</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span> request<span class="token punctuation">,</span> <span class="token class-name">Channel</span> channel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>dispatcher<span class="token punctuation">.</span></span><span class="token class-name">Jt1078RequestHandler</span><span class="token punctuation">#</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">boolean</span> <span class="token function">beforeHandle</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,7),c=[p];function l(o,i){return s(),a("div",null,c)}const r=n(t,[["render",l],["__file","request-lifecycle-listener.html.vue"]]);export{r as default};
