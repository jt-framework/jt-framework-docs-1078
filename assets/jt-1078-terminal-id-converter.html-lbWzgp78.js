import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as e}from"./app-5LVKShiE.js";const t={},p=e(`<h1 id="jt1078terminalidconverter" tabindex="-1"><a class="header-anchor" href="#jt1078terminalidconverter"><span>Jt1078TerminalIdConverter</span></a></h1><p><strong>1078</strong> 的 <code>SIM</code> 为 <code>BCD[6]</code>，但是在 <strong>808</strong> 协议里：</p><ul><li><strong>v2011</strong> 或 <strong>v2013</strong> 版的终端手机号就是 <strong>BCD[6]</strong></li><li><strong>v2019</strong>的终端手机号是 <strong>BCD[10]</strong></li></ul><p>这就需要一个 <code>SIM</code> 号的转换器了。<code>Jt1078TerminalIdConverter</code> 就是用来做这个的。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@FunctionalInterface</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt1078TerminalIdConverter</span> <span class="token keyword">extends</span> <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token class-name">String</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> original<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">default</span> <span class="token class-name">String</span> <span class="token function">apply</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认实现是只保留最后 12 个字符：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DefaultJt1078TerminalIdConverter</span> <span class="token keyword">implements</span> <span class="token class-name">Jt1078TerminalIdConverter</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> original<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// BCD[6] ==&gt; 12</span>
        <span class="token comment">// 视为 2013||2011 版</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>original<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> original<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">// 视为 2019 ==&gt; 只保留最后 12 位</span>
        <span class="token keyword">return</span> original<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>original<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果默认实现不满足你的要求，声明一个 <code>Jt1078TerminalIdConverter</code> 的 <code>Bean</code> 替换掉内置的就行。</p>`,8),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","jt-1078-terminal-id-converter.html.vue"]]);export{d as default};
