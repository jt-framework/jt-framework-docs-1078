import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as s,c as a,a as e}from"./app-5LVKShiE.js";const t={},p=e(`<h1 id="请求分包合并" tabindex="-1"><a class="header-anchor" href="#请求分包合并"><span>请求分包合并</span></a></h1><h2 id="分包合并" tabindex="-1"><a class="header-anchor" href="#分包合并"><span>分包合并</span></a></h2><p>收到终端上报的分包请求时，会先将分包消息 <strong>暂存</strong> 到 分包合并器 <code>Jt1078RequestSubPackageCombiner</code></p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 子包合并器
 *
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>codec<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">CaffeineJt1078RequestSubPackageCombiner</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token field">NO_OPS</span></span>
 * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>dispatcher<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">DefaultPublisherBasedJt1078RequestHandler</span><span class="token punctuation">#</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span><span class="token punctuation">)</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt1078RequestSubPackageCombiner</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 尝试合并子包
     *
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">&gt;</span></span>
     *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
     *         如果能通过当前请求组装出一个完整的包，就返回组装之后的完整的包
     *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
     *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
     *         否则就返回 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Optional</span><span class="token punctuation">#</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>, <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>red<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>不要<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>返回 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java"><span class="token keyword">null</span></span></span><span class="token punctuation">}</span>
     *     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
     * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">&gt;</span></span>
     *
     * <span class="token keyword">@param</span> <span class="token parameter">request</span> 当前请求(有可能是原子包，也有可能是子包)
     * <span class="token keyword">@return</span> 合并之后的新请求
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>codec<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">CaffeineJt1078RequestSubPackageCombiner</span></span>
     */</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Jt1078Request</span><span class="token punctuation">&gt;</span></span> <span class="token function">tryCombine</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 空实现: 分包请求不会自动合并(意味着下游可能会收到尚未合并的子包)
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>support<span class="token punctuation">.</span>dispatcher<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span><span class="token class-name">DefaultPublisherBasedJt1078RequestHandler</span><span class="token punctuation">#</span><span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Request</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token class-name">Jt1078RequestSubPackageCombiner</span> <span class="token constant">NO_OPS</span> <span class="token operator">=</span> request <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
        request<span class="token punctuation">.</span><span class="token function">retain</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认实现是基于 <code>Caffeine</code> 的 <code>CaffeineJt1078RequestSubPackageCombiner</code>。</p><h2 id="相关配置" tabindex="-1"><a class="header-anchor" href="#相关配置"><span>相关配置</span></a></h2><p>如何你使用的是内置的基于 <code>Caffeine</code> 的分包合并逻辑。你可以参考下面的配置项。</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code><span class="token key atrule">jt1078</span><span class="token punctuation">:</span>
  <span class="token key atrule">request-sub-package-combiner</span><span class="token punctuation">:</span>
    <span class="token key atrule">type</span><span class="token punctuation">:</span> caffeine
    <span class="token comment"># 当且仅当 jt1078.request-sub-package-combiner.type = Caffeine 时有效</span>
    <span class="token key atrule">caffeine</span><span class="token punctuation">:</span>
      <span class="token key atrule">maximum-size</span><span class="token punctuation">:</span> <span class="token number">1024</span> <span class="token comment"># 最大缓存条目</span>
      <span class="token key atrule">ttl</span><span class="token punctuation">:</span> 30s <span class="token comment"># 缓存过期时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),c=[p];function o(l,i){return s(),a("div",null,c)}const d=n(t,[["render",o],["__file","request-sub-package.html.vue"]]);export{d as default};
