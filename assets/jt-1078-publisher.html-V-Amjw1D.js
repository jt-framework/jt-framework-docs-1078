import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as e,o as c,c as o,b as n,d as s,e as t,a as l}from"./app-5LVKShiE.js";const u={},i=n("h1",{id:"jt1078publisher",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#jt1078publisher"},[n("span",null,"Jt1078Publisher")])],-1),k=n("p",null,[n("code",null,"Jt1078Publisher"),s(" 是订阅 "),n("strong",null,"1078 码流"),s("的关键组件。")],-1),r=n("p",null,[s("通过指定 "),n("strong",null,"SIM号"),s(" 和 "),n("strong",null,"逻辑通道号"),s(" 来订阅码流。")],-1),d={class:"hint-container tip"},m=n("p",{class:"hint-container-title"},"提示",-1),b=n("p",null,[n("code",null,"Jt1078Publisher"),s(" 提供的一些列 "),n("code",null,"subscribe()"),s(" 方法最终返回的都是 "),n("code",null,"Flux<S>"),s(" 类型:")],-1),v={href:"https://projectreactor.io/docs/core/release/reference/#flux",target:"_blank",rel:"noopener noreferrer"},f=n("br",null,null,-1),h={href:"https://projectreactor.io/docs/core/release/reference/#flux",target:"_blank",rel:"noopener noreferrer"},y=n("li",null,[s("泛型参数"),n("code",null,"<S>"),s(" 表示的是当前订阅返回的码流数据，"),n("code",null,"S"),s(" 的具体类型取决于你使用的 "),n("code",null,"Jt1078ChannelCollector")],-1),S=l(`<div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Jt1078Publisher</span> <span class="token punctuation">{</span>

    <span class="token class-name">Jt1078TerminalIdConverter</span> <span class="token function">terminalIdConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 当客户端断开时会给下游发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078SessionDestroyException</span></span><span class="token punctuation">}</span> 异常信号, 订阅者应该处理这个异常
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>subscription<span class="token punctuation">.</span></span><span class="token class-name">BuiltinJt1078SessionCloseListener</span><span class="token punctuation">#</span><span class="token function">onSessionClose</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Session</span><span class="token punctuation">,</span> <span class="token class-name">Jt1078SessionCloseReason</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078Subscription</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> cls<span class="token punctuation">,</span> <span class="token class-name">String</span> sim<span class="token punctuation">,</span> <span class="token keyword">short</span> channelNumber<span class="token punctuation">,</span> <span class="token class-name">Duration</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSubscribe</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> sim<span class="token punctuation">,</span> channelNumber<span class="token punctuation">,</span> timeout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078Subscription</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Flux</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> cls<span class="token punctuation">,</span> <span class="token class-name">Jt1078SubscriberCreator</span> creator<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSubscribe</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> creator<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * 当客户端断开时会给下游发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078SessionDestroyException</span></span><span class="token punctuation">}</span> 异常信号, 订阅者应该处理这个异常
     *
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token namespace">io<span class="token punctuation">.</span>github<span class="token punctuation">.</span>hylexus<span class="token punctuation">.</span>jt<span class="token punctuation">.</span>jt1078<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>impl<span class="token punctuation">.</span>subscription<span class="token punctuation">.</span></span><span class="token class-name">BuiltinJt1078SessionCloseListener</span><span class="token punctuation">#</span><span class="token function">onSessionClose</span><span class="token punctuation">(</span><span class="token class-name">Jt1078Session</span><span class="token punctuation">,</span> <span class="token class-name">Jt1078SessionCloseReason</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078Subscription</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Jt1078Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">doSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> cls<span class="token punctuation">,</span> <span class="token class-name">String</span> sim<span class="token punctuation">,</span> <span class="token keyword">short</span> channelNumber<span class="token punctuation">,</span> <span class="token class-name">Duration</span> timeout<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doSubscribe</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> <span class="token class-name">Jt1078SubscriberCreator</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sim</span><span class="token punctuation">(</span>sim<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">channelNumber</span><span class="token punctuation">(</span>channelNumber<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">timeout</span><span class="token punctuation">(</span>timeout<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">metadata</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">emptyMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078Subscription</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Jt1078Subscriber</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span></span> <span class="token function">doSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">Jt1078ChannelCollector</span><span class="token punctuation">&lt;</span><span class="token class-name">S</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> cls<span class="token punctuation">,</span> <span class="token class-name">Jt1078SubscriberCreator</span> creator<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">id</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078Subscriber</span><span class="token punctuation">#</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">doSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">short</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unsubscribe</span><span class="token punctuation">(</span>id<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>     <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078Subscriber</span><span class="token punctuation">#</span><span class="token function">id</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@param</span> <span class="token parameter">reason</span> 如果 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">reason</span></span><span class="token punctuation">}</span> 为空，发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">SignalType</span><span class="token punctuation">#</span><span class="token field">ON_COMPLETE</span></span> ON_COMPLETE<span class="token punctuation">}</span> 信号以表示当前订阅终止。
     *               否则发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">SignalType</span><span class="token punctuation">#</span><span class="token field">ON_ERROR</span></span> ON_ERROR<span class="token punctuation">}</span> 信号以表示当前订阅终止。
     * <span class="token keyword">@see</span> <span class="token reference"><span class="token punctuation">#</span><span class="token function">doSubscribe</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token keyword">short</span><span class="token punctuation">,</span> <span class="token class-name">Duration</span><span class="token punctuation">)</span></span>
     */</span>
    <span class="token keyword">void</span> <span class="token function">unsubscribe</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt1078SubscriberCloseException</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">sim</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078Request</span><span class="token punctuation">#</span><span class="token function">sim</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">unsubscribeWithSim</span><span class="token punctuation">(</span><span class="token class-name">String</span> sim<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unsubscribeWithSim</span><span class="token punctuation">(</span><span class="token function">terminalIdConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>sim<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * <span class="token keyword">@param</span> <span class="token parameter">sim</span>    <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">Jt1078Request</span><span class="token punctuation">#</span><span class="token function">sim</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">}</span>
     * <span class="token keyword">@param</span> <span class="token parameter">reason</span> 如果 <span class="token punctuation">{</span><span class="token keyword">@code</span> <span class="token code-section"><span class="token code language-java">reason</span></span><span class="token punctuation">}</span> 为空，发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">SignalType</span><span class="token punctuation">#</span><span class="token field">ON_COMPLETE</span></span> ON_COMPLETE<span class="token punctuation">}</span> 信号以表示当前订阅终止。
     *               否则发送 <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token namespace">reactor<span class="token punctuation">.</span>core<span class="token punctuation">.</span>publisher<span class="token punctuation">.</span></span><span class="token class-name">SignalType</span><span class="token punctuation">#</span><span class="token field">ON_ERROR</span></span> ON_ERROR<span class="token punctuation">}</span> 信号以表示当前订阅终止。
     */</span>
    <span class="token keyword">void</span> <span class="token function">unsubscribeWithSim</span><span class="token punctuation">(</span><span class="token class-name">String</span> sim<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt1078SubscriberCloseException</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">unsubscribeWithSimAndChannelNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> sim<span class="token punctuation">,</span> <span class="token keyword">short</span> channelNumber<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">unsubscribeWithSimAndChannelNumber</span><span class="token punctuation">(</span><span class="token function">terminalIdConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>sim<span class="token punctuation">)</span><span class="token punctuation">,</span> channelNumber<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">unsubscribeWithSimAndChannelNumber</span><span class="token punctuation">(</span><span class="token class-name">String</span> sim<span class="token punctuation">,</span> <span class="token keyword">short</span> channelNumber<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Jt1078SubscriberCloseException</span> reason<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function w(g,_){const a=e("ExternalLinkIcon");return c(),o("div",null,[i,k,r,n("div",d,[m,b,n("ul",null,[n("li",null,[n("a",v,[s("Flux"),t(a)]),s(" 可以简单理解为一个异步的无限的流式的数据源，会源源不断地输出码流数据；")]),n("li",null,[s("更多有关 Flux"),f,s(" 的细节请参考官方文档: "),n("a",h,[s("https://projectreactor.io"),t(a)])]),y])]),S])}const x=p(u,[["render",w],["__file","jt-1078-publisher.html.vue"]]);export{x as default};
